How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Since only lines with difference between the versions are shown, there is less content to inspect.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

I can easily revert to an older version and discard the new, non-working version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

pros: ability to control what constitutes a logical unit and commit each appropriately
cons: one needs to be discplined to adhere to a commit policy

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git is designed for projects that consist of multiple files as a single unit.
Google Docs is designed for projects that primarily concerns a single file.

How can you use the commands git log and git diff to view the history of files?

Use git log to look at the history of changes.
Use git diff id1 id2 to see the difference between two commits. 

How might using version control make you more confident to make changes that
could break something?

It makes me more confident to make changes because I know I can revert to a previous version that works.

Now that you have your workspace set up, what do you want to try using Git for?

To build a better gbm
